#+Title: Modal / Custom keybindings
* Guiding principles

- The keystrokes should **avoid using modifier keys** as much as possible.
- The keystrokes should be **mnemonics** in nature.
- No need to follow Vim / Emacs way of remembering things. Follow what
  is easy for you to remember.
  
* Custom functions

** Buffer editing and inserting characters

#+begin_src emacs-lisp
  (defun insert-4-space ()
    (interactive)
    (insert "    "))
#+end_src

** Search and replace

#+begin_src emacs-lisp

  ;; Replace word under cursor
  (defun replace-cur-word (replace-str)
    (interactive "sDo query-replace current word with: ")
    (forward-word)
    (let ((end (point)))
      (backward-word)
      (kill-ring-save (point) end)
      (query-replace (current-kill 0) replace-str) ))

  ;; query-replace current symbol
  (defun replace-symbol (replace-str)
    (interactive "sDo query-replace current word with: ")
    (sp-forward-symbol)
    (let ((end (point)))
      (sp-backward-symbol)
      (kill-ring-save (point) end)
      (query-replace (current-kill 0) replace-str) ))

  ;; Find markded region using swiper
  (defun swiper-region ()
    "Use current region if active for swiper search"
    (interactive)
    (if (use-region-p)
	(swiper (format "%s" (buffer-substring (region-beginning) (region-end))))
      (swiper)))
#+end_src

* Packages

** Ryo modal

#+begin_src emacs-lisp
  (use-package ryo-modal
    :commands ryo-modal-mode
    )
  (push '((nil . "ryo:.*:") . (nil . "")) which-key-replacement-alist)
  (add-hook 'text-mode-hook 'ryo-modal-mode)
  (add-hook 'prog-mode-hook 'ryo-modal-mode)
#+end_src

** Which key

#+begin_src emacs-lisp
  (use-package which-key
    :config
    (which-key-mode))
#+end_src

* Entering / Exiting Ryo modal keys

#+begin_src emacs-lisp
  (global-set-key (kbd "C-r") 'ryo-modal-mode)
  (ryo-modal-keys ("SPC r" ryo-modal-mode))
#+end_src

* Repeat

#+begin_src emacs-lisp
  (ryo-modal-keys("8" repeat))
#+end_src

* Moving around

** In buffer

#+begin_src emacs-lisp

  (ryo-modal-keys

   ;; Character related movements
   ("f" forward-char)                        
   ("b" backward-char)                       
   ("u" previous-line)                       
   ("d" next-line)                           

   ;; Line / Paragraph related movements
   ("SPC b" beginning-of-line)
   ("SPC f" end-of-line)
   ("F" forward-paragraph)
   ("B" backward-paragraph)

   ;; Paragraph related movements
   ("U" beginning-of-buffer)          
   ("D" end-of-buffer)

   ;; Word movements
   ("w" forward-word)
   ("r" backward-word)
   )

#+end_src
* Editing

** In buffer

#+begin_src emacs-lisp
  (ryo-modal-keys
   ("x" kill-line)
   ("p" yank)
   )
    #+end_src

* Major mode bindings

** Accesing other major modes

#+begin_src emacs-lisp
  (ryo-modal-keys
	     ("SPC m g" magit-status)
	     ("SPC m t" treemacs)
	     )
#+end_src

